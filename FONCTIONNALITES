-> carte
-> itinéraire
-> affichage informations
-> augmenter la fréquence de raffraichissement : 5s
-> tracer l'itinéraire
-> design
-> application mobile
-> 


allee: liberte 5 vers palais 
retour: palais vers liberte 5

------------message:
{
	ligne 						//nom de la ligne
	sens 						//le sens
	near_bus : { 				//le bus le plus proche de l'arret ESP dans le sens choisi
		id_bus, 
		matricule,
		position : {
			latitude,
			longitude,
			altitude
		},
		vitesse, 				//vitesse du bus
		distante_restante, 		//distance entre le bus et l'arret ESP
		next_arret : { 			//le prochain arret
			id_arret,
			nom,
			latitude,
			longitude,
			nb_arrets_restants	//nombre d'arrets restants
		}
	},
	bus, 						/* les autres bus sur la route */
	arrets, 					//les restants pour atteindre l'arret ESP
	message, 					//message à afficher
	arret_esp					//Arret ESP
}

--------- NEXT-BUS: PARTIE WEB ---------------------

DOING
-> design: texte a afficher
-> alerte
-> utiliser gprs
-> geolocaliser le client
-> proposer au client l'arret le proche
-> transformer le serveur en API Restfull
-> application mobile pour recevoir la position du bus

DONE
-> carte avec leaflet
-> ajouter effet sur l'icone du bus
-> recuperer tous les bus
-> geocoding/reverse geocoding
-> afficher tous les bus
-> changement arret de référence à arret 16 (allée avant ESP vers palais)
-> integrer dans le serveur les messages

TODO
-> affichage des informations
-> tracer l'itinéraire
-> application mobile
-> Design

--------------- SNAP-INFO: PARTIE MOBILE -----------------------
TODO
-> serveur de traitement
-> mobile
-> Reconnaissance d'objets (android et web)
-> page de localisation (mobile) gps+gsm
-> menu de préference (setinng)
-> stockage dans une base de données mobile
-> barre de progression

DONE
-> interface web
-> photo
-> mobile:
	-> menu
	-> 

DOING
-> récupération de la position
-> envoie de la photo